{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srksa\\\\OneDrive\\\\Desktop\\\\feedback-system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CourseList from './components/CourseList';\nimport FeedbackForm from './components/FeedbackForm';\nimport Analytics from './components/Analytics';\nimport CourseManagement from './components/CourseManagement';\n\n// API base URL - points to your backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:5000/api';\nfunction App() {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Fetch courses from backend API\n  useEffect(() => {\n    fetchCourses();\n  }, []);\n  const fetchCourses = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_BASE}/courses`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n\n      // Handle both response formats: {data: [...]} or just [...]\n      const coursesData = result.data || result;\n      if (Array.isArray(coursesData)) {\n        setCourses(coursesData);\n        setError('');\n      } else {\n        throw new Error('Invalid courses data format');\n      }\n    } catch (error) {\n      console.error('Error fetching courses:', error);\n      setError('Failed to load courses. Please check if the backend server is running.');\n\n      // Fallback to mock data if backend is not available\n      const mockCourses = [{\n        id: 1,\n        name: 'Mathematics',\n        instructor: 'Dr. Smith',\n        avgRating: 4.2\n      }, {\n        id: 2,\n        name: 'Computer Science',\n        instructor: 'Prof. Johnson',\n        avgRating: 4.5\n      }, {\n        id: 3,\n        name: 'Physics',\n        instructor: 'Dr. Brown',\n        avgRating: 3.8\n      }];\n      setCourses(mockCourses);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: \"Loading courses...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-4\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning alert-dismissible fade show\",\n          role: \"alert\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Warning:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: () => setError('')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(CourseList, {\n              courses: courses,\n              setSelectedCourse: setSelectedCourse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/feedback\",\n            element: /*#__PURE__*/_jsxDEV(FeedbackForm, {\n              course: selectedCourse,\n              courses: courses,\n              onFeedbackSubmit: fetchCourses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/analytics\",\n            element: /*#__PURE__*/_jsxDEV(Analytics, {\n              courses: courses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/manage-courses\",\n            element: /*#__PURE__*/_jsxDEV(CourseManagement, {\n              onCourseUpdate: fetchCourses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"90NWxnRnkznBi+kOgZusbtFwb2E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navbar","CourseList","FeedbackForm","Analytics","CourseManagement","jsxDEV","_jsxDEV","API_BASE","App","_s","courses","setCourses","selectedCourse","setSelectedCourse","loading","setLoading","error","setError","fetchCourses","response","fetch","ok","Error","status","result","json","coursesData","data","Array","isArray","console","mockCourses","id","name","instructor","avgRating","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","type","onClick","path","element","course","onFeedbackSubmit","onCourseUpdate","_c","$RefreshReg$"],"sources":["C:/Users/srksa/OneDrive/Desktop/feedback-system/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport CourseList from './components/CourseList';\r\nimport FeedbackForm from './components/FeedbackForm';\r\nimport Analytics from './components/Analytics';\r\nimport CourseManagement from './components/CourseManagement';\r\n\r\n// API base URL - points to your backend\r\nconst API_BASE = 'http://localhost:5000/api';\r\n\r\nfunction App() {\r\n  const [courses, setCourses] = useState([]);\r\n  const [selectedCourse, setSelectedCourse] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch courses from backend API\r\n  useEffect(() => {\r\n    fetchCourses();\r\n  }, []);\r\n\r\n  const fetchCourses = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`${API_BASE}/courses`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      // Handle both response formats: {data: [...]} or just [...]\r\n      const coursesData = result.data || result;\r\n      \r\n      if (Array.isArray(coursesData)) {\r\n        setCourses(coursesData);\r\n        setError('');\r\n      } else {\r\n        throw new Error('Invalid courses data format');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching courses:', error);\r\n      setError('Failed to load courses. Please check if the backend server is running.');\r\n      \r\n      // Fallback to mock data if backend is not available\r\n      const mockCourses = [\r\n        { id: 1, name: 'Mathematics', instructor: 'Dr. Smith', avgRating: 4.2 },\r\n        { id: 2, name: 'Computer Science', instructor: 'Prof. Johnson', avgRating: 4.5 },\r\n        { id: 3, name: 'Physics', instructor: 'Dr. Brown', avgRating: 3.8 },\r\n      ];\r\n      setCourses(mockCourses);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <div className=\"container mt-4 text-center\">\r\n          <div className=\"spinner-border text-primary\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <p className=\"mt-2\">Loading courses...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <div className=\"container mt-4\">\r\n          {error && (\r\n            <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n              <strong>Warning:</strong> {error}\r\n              <button type=\"button\" className=\"btn-close\" onClick={() => setError('')}></button>\r\n            </div>\r\n          )}\r\n          \r\n          <Routes>\r\n            <Route \r\n              path=\"/\" \r\n              element={\r\n                <CourseList \r\n                  courses={courses} \r\n                  setSelectedCourse={setSelectedCourse} \r\n                />\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/feedback\" \r\n              element={\r\n                <FeedbackForm \r\n                  course={selectedCourse} \r\n                  courses={courses} \r\n                  onFeedbackSubmit={fetchCourses}\r\n                />\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/analytics\" \r\n              element={\r\n                <Analytics \r\n                  courses={courses} \r\n                />\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/manage-courses\" \r\n              element={\r\n                <CourseManagement onCourseUpdate={fetchCourses} />\r\n              } \r\n            />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}